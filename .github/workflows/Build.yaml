name: Build and Release ESP32 Firmware (manual)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.0.0)'
        required: true
      release_name:
        description: 'Release name (optional)'
        required: false
        default: ''
      release_body:
        description: 'Release notes / body (optional)'
        required: false
        default: ''
      draft:
        description: 'Create release as draft? (true/false)'
        required: false
        default: 'false'
      prerelease:
        description: 'Mark release as prerelease? (true/false)'
        required: false
        default: 'false'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      - name: Build firmware
        run: pio run

      - name: Find firmware files and fail if none
        run: |
          shopt -s nullglob
          files=(.pio/build/*/*.bin .pio/build/*/*.elf)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No firmware files found in .pio/build/. Build failed or output path changed."
            echo "Listing .pio directory for debugging:"
            ls -la .pio || true
            exit 1
          fi
          echo "Found firmware files:"
          printf " - %s\n" "${files[@]}"

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: |
            .pio/build/*/*.bin
            .pio/build/*/*.elf

      - name: Create GitHub Release and attach firmware artifact
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.release_name }}
          body: ${{ github.event.inputs.release_body }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          artifacts: firmware
