name: Convert to FluidNC from Issue

on:
  workflow_dispatch:   # Bisa dijalankan manual dari tab Actions
  issues:
    types:
      - opened          # Juga tetap jalan saat ada issue baru

jobs:
  convert-from-issue:
    # Hilangkan 'if:' supaya bisa dijalankan manual
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Checkout converter repo (DumpConfig branch)
        uses: actions/checkout@v4
        with:
          repository: bdring/Grbl_Esp32
          ref: DumpConfig
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get attachment URL from issue body (if triggered by issue)
        id: geturl
        if: github.event_name == 'issues'
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          set -euo pipefail
          echo "üîç Mencari URL di body issue..."
          url=$(echo "$ISSUE_BODY" | grep -oE 'https?://[^ )]+' | head -n1 || true)
          if [ -z "$url" ]; then
            echo "‚ùå Tidak ditemukan URL di body issue."
            exit 1
          fi
          echo "‚úÖ Ditemukan URL: $url"
          curl -L -O "$url"
          filename=$(basename "$url")
          echo "file_path=${filename}" >> $GITHUB_ENV

      - name: Manual mode - gunakan file test jika run manual
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "‚öôÔ∏è Mode manual dijalankan."
          echo "Pastikan file convert-job.h tersedia di repo."
          if [ ! -f convert-job.h ]; then
            echo "File convert-job.h tidak ditemukan!"
            exit 1
          fi
          echo "file_path=convert-job.h" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install PlatformIO dan dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi

      - name: Jalankan converter
        id: convert
        env:
          FILE_PATH: ${{ env.file_path }}
        run: |
          set -euo pipefail
          echo "üöÄ Mengonversi file: $FILE_PATH"
          mv "$FILE_PATH" convert-job.h
          if [ ! -f convert-machine.py ]; then
            echo "‚ùå File convert-machine.py tidak ditemukan!"
            exit 1
          fi
          python convert-machine.py convert-job.h
          if [ ! -f yaml/convert-job.yaml ]; then
            echo "‚ùå YAML tidak dihasilkan."
            ls -la yaml || true
            exit 1
          fi
          echo "file_content<<'EOF'" >> $GITHUB_ENV
          cat yaml/convert-job.yaml >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "‚úÖ Konversi berhasil."

      - name: Laporkan error ke Issue
        if: failure() && github.event_name == 'issues'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ‚ùå **Konversi gagal**
            File `${{ env.file_path }}` tidak dapat dikonversi ke YAML.
            Kemungkinan penyebab:
            1. Format lama Grbl_ESP32 yang tidak kompatibel
            2. Bug pada skrip converter
            Hubungi kami di Discord: https://discord.gg/MDsRDeNsTE

      - name: Tambahkan hasil YAML ke komentar Issue
        if: success() && github.event_name == 'issues'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ‚úÖ **Konversi Berhasil**
            File `${{ env.file_path }}` berhasil diubah ke YAML.
            Salin konten berikut ke `config.yaml` dan upload ke ESP32 kamu:
            ```yaml
            ${{ env.file_content }}
            ```
